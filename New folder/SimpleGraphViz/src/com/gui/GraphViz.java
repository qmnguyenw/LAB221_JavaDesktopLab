/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gui;

import com.entity.GraphPanel;
import java.awt.Color;
import java.awt.FileDialog;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author vietddse62677
 */
public class GraphViz extends javax.swing.JFrame {

    //variables
    GraphPanel graphPanel;

    /**
     * Creates new form GraphViz
     */
    public GraphViz() {
        initComponents();
        graphPanel = new GraphPanel();
        panelGraph.add(graphPanel);
        graphPanel.addNode("r", "RED", "red", 50, 50);
        graphPanel.addNode("g", "GREEN", "green", 100, 100);
        graphPanel.addNode("b", "BLUE", "blue", 150, 60);
        graphPanel.addNode("z", "dinh anh", "BLACK", 180, 200);
        // Z[name = "dinh anh",color = "BLACK",x = 180,y = 200]
        graphPanel.addEdge("r", "g", "45");
    }

    private void fileOpenAction() {
        JFileChooser fc = new JFileChooser("");
        fc.setFileFilter(new FileNameExtensionFilter(
                "Text file only", "txt", "java", "html", "xml"));
        //display file chooser
        fc.showOpenDialog(this);
        File item = fc.getSelectedFile();
        if (item != null) {
            String fileName = item.toString();
            String file = fileName;
            if (fileName.contains("\\")) {
                file = fileName.substring(fileName.lastIndexOf("\\") + 1);
            } else if (fileName.contains("/")) {
                file = fileName.substring(fileName.lastIndexOf("/") + 1);
            }
            //output content of file to textpane
            StringBuffer sb = new StringBuffer();
            try {
                BufferedReader br
                        = new BufferedReader(
                                new FileReader(fileName));
                String line = "";
                while ((line = br.readLine()) != null) {
                    sb.append(line + "\n");
                }
                textArea.setText(sb.toString());
                br.close();
            } catch (FileNotFoundException ex) {
                System.out.println("File not found");
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }

    }

    private void fileSaveAsAction() {
        FileDialog fd
                = new FileDialog(new JFrame(), "Save file", FileDialog.SAVE);
        fd.setVisible(true);
        if (fd.getFile() != null) {
            String path = fd.getDirectory() + fd.getFile();
            try {
                DataOutputStream dos
                        = new DataOutputStream(new FileOutputStream(path));
                String line = textArea.getText();
                dos.writeBytes(line);
                dos.close();
            } catch (FileNotFoundException ex) {
                System.out.println("File not found");
            } catch (IOException ex) {
                System.out.println("IO exception");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnViz = new javax.swing.JButton();
        panelGraph = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        fileNew = new javax.swing.JMenuItem();
        fileOpen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        fileSave = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnViz.setText("Visualize");
        btnViz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVizActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGraphLayout = new javax.swing.GroupLayout(panelGraph);
        panelGraph.setLayout(panelGraphLayout);
        panelGraphLayout.setHorizontalGroup(
            panelGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );
        panelGraphLayout.setVerticalGroup(
            panelGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        fileMenu.setText("File");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        fileNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        fileNew.setText("New");
        fileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNewActionPerformed(evt);
            }
        });
        fileMenu.add(fileNew);

        fileOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        fileOpen.setText("Open");
        fileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileOpenActionPerformed(evt);
            }
        });
        fileMenu.add(fileOpen);
        fileMenu.add(jSeparator1);

        fileSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        fileSave.setText("Save");
        fileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSaveActionPerformed(evt);
            }
        });
        fileMenu.add(fileSave);
        fileMenu.add(jSeparator2);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnViz)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(194, 194, 194)
                                .addComponent(btnViz)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(panelGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVizActionPerformed
        // TODO add your handling code here:
        String text = textArea.getText();
        String regex
                = "(\\s*)(?<name>\\D+\\s*)(\\[)(\\s*name\\s*=\\s*)(?<lable>\"([^\"]*)\")(\\s*,)(\\s*color\\s*=\\s*)(?<color>\"([^\"]*)\")(\\s*,)(\\s*x\\s*=\\s*)(?<x>\\d+)(\\s*,)(\\s*y\\s*=\\s*)(?<y>\\d+)(])";
        Pattern pattern = Pattern.compile(regex);

        Matcher matcher = pattern.matcher(text);

        while (matcher.find()) {
            String group = matcher.group();
            System.out.println(group);
            System.out.println("name: " + matcher.group("name"));
            System.out.println("lable: " + matcher.group("lable"));
            System.out.println("color: " + matcher.group("color"));
            System.out.println("x: " + matcher.group("x"));
            System.out.println("y: " + matcher.group("y"));
            String name = matcher.group("name");
            String lable = matcher.group("lable").replaceAll("\"", "");
            String color = matcher.group("color").replaceAll("\"", "");
            int x = Integer.parseInt(matcher.group("x"));
            int y = Integer.parseInt(matcher.group("y"));
            graphPanel.addNode(name, lable, color, x, y);
        }

        String regex_addEdge
                = "(?<from>\\D+)(\\s*->\\s*)(?<to>\\D+)(\\s*:\\s*)(?<lable>(\"([^\"]*)\"))";
        pattern = Pattern.compile(regex_addEdge);
        for (String l : text.split("\n")) {
            matcher = pattern.matcher(l);
            while (matcher.find()) {
                String group = matcher.group();
                String from = matcher.group("from").trim();
                String to = matcher.group("to").trim();
                String lable = matcher.group("lable").replaceAll("\"", "");
                graphPanel.addEdge(from, to, lable);
            }
        }
    }//GEN-LAST:event_btnVizActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        BufferedImage image
                = new BufferedImage(
                        graphPanel.getWidth(),
                        graphPanel.getHeight(),
                        BufferedImage.TYPE_INT_ARGB);
        Graphics g = image.getGraphics();
        graphPanel.paint(g);
        //save to file
        java.nio.file.Path currentRelativePath = Paths.get("");
        String s = currentRelativePath.toAbsolutePath().toString();
        File f = new File(s);
        File[] listFiles = f.listFiles();
        ArrayList<String> imageNames = new ArrayList<>();
        String regex = "graph(\\d{4}).png";
        for (File file : listFiles) {
            String name = file.getName();
            if (name.matches(regex)) {
                imageNames.add(name);
            }
        }
        String fileOutputName = "";
        if (imageNames.size() == 0) {
            fileOutputName = "graph0000" + ".png";
        } else {
            int max = 0;
            for (String fileName : imageNames) {
                fileName = fileName.replace(".png", "");
                int number = Integer.valueOf(fileName.replace("graph", ""));
                if (number > max) {
                    max = number;
                }
            }
            max++;
            fileOutputName = "graph"
                    + ("0000" + String.valueOf(max)).substring(String.valueOf(max).length())
                    + ".png";
        }
        try {
            ImageIO.write(image, "png", new File(fileOutputName));
        } catch (IOException ex) {
            Logger.getLogger(GraphViz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void fileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNewActionPerformed
        // TODO add your handling code here:
        textArea.setText("");
    }//GEN-LAST:event_fileNewActionPerformed

    private void fileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileOpenActionPerformed
        // TODO add your handling code here:
        fileOpenAction();
    }//GEN-LAST:event_fileOpenActionPerformed

    private void fileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSaveActionPerformed
        // TODO add your handling code here:
        fileSaveAsAction();
    }//GEN-LAST:event_fileSaveActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphViz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphViz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphViz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphViz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphViz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnViz;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fileNew;
    private javax.swing.JMenuItem fileOpen;
    private javax.swing.JMenuItem fileSave;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPanel panelGraph;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
